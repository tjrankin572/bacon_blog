<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://tjrankin572.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tjrankin572.github.io/" rel="alternate" type="text/html" /><updated>2021-03-13T11:54:31-07:00</updated><id>https://tjrankin572.github.io/feed.xml</id><title type="html">Rankin Bacon Blog</title><subtitle>A blog where Tyler Rankin (Whose name rhymes with bacon), rants about video games, programming and other nerdy things.</subtitle><entry><title type="html">HTML: Basic Inputs PT-1</title><link href="https://tjrankin572.github.io/coding/2021/03/02/HTML-Radio-Buttons.html" rel="alternate" type="text/html" title="HTML: Basic Inputs PT-1" /><published>2021-03-02T12:00:00-07:00</published><updated>2021-03-02T12:00:00-07:00</updated><id>https://tjrankin572.github.io/coding/2021/03/02/HTML-Radio-Buttons</id><content type="html" xml:base="https://tjrankin572.github.io/coding/2021/03/02/HTML-Radio-Buttons.html">&lt;p&gt;What is up World?&lt;/p&gt;

&lt;p&gt;I guess that I’m full speed ahead on this whole blog thing.
 One of the things I would love to write about on a consistent basis would be coding tutorials! I’ve been very lucky to have taught myself enough code in order to land a career in the tech industry. So it’d be nice to share what I’ve learned along the way.&lt;/p&gt;

&lt;p&gt;Therefore, why not cover the absolute basics that I’m positive any developer whose visiting this blog has probably seen before!&lt;/p&gt;

&lt;p&gt;Today we’re going to discuss how to use radio buttons!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/W0SLa0YuzWBZ6/giphy.gif&quot; alt=&quot;Software Developers Have a Disgusted Reaction&quot; /&gt;
 \&lt;/p&gt;

&lt;p&gt;Fine if you’re so stuck-up about it, how about we cover three inputs?
Oh, and how about we wrap all these inputs together into a survey project?
Would that quench your thrist?&lt;/p&gt;

&lt;iframe src=&quot;https://giphy.com/embed/l0EwZ92cG9x9VPC7u&quot; width=&quot;480&quot; height=&quot;476&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/nba-l0EwZ92cG9x9VPC7u&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sweet, now that we got that out of the way let’s get rolling!&lt;/p&gt;

&lt;p&gt;Here are the inputs we are going to cover:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Radio Inputs&lt;/li&gt;
  &lt;li&gt;Checkboxes&lt;/li&gt;
  &lt;li&gt;Dropdown&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2&gt;The Form Tag&lt;/h2&gt;

&lt;p&gt;Whenever, you're working with inputs, it's a good idea to wrap all of your inputs inside of a form tag. That way our user can start submitting data when they're done with our forms. Since I'm planning to make this a multi-part project series, feel free to fork this codepen below!&lt;/p&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;364&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;tjrankin572&quot; data-slug-hash=&quot;rNWPEOE&quot; style=&quot;height: 364px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;RankinBacon.blog-SurveyTemplate&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/tjrankin572/pen/rNWPEOE&quot;&gt;
  RankinBacon.blog-SurveyTemplate&lt;/a&gt; by tjrankin572 (&lt;a href=&quot;https://codepen.io/tjrankin572&quot;&gt;@tjrankin572&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Without further ado, let's get started.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Making Radio Button&lt;/h2&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;400&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;tjrankin572&quot; data-slug-hash=&quot;oNYaJMg&quot; style=&quot;height: 600px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;RankinBacon.blog-RadioInput&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/tjrankin572/pen/oNYaJMg&quot;&gt;
  RankinBacon.blog-RadioInput&lt;/a&gt; by tjrankin572 (&lt;a href=&quot;https://codepen.io/tjrankin572&quot;&gt;@tjrankin572&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Let’s break down these attributes step by step.&lt;/p&gt;

&lt;h3&gt;Step 1&lt;/h3&gt;
&lt;p&gt;First we'll add in our input tag with a &lt;strong&gt;type&lt;/strong&gt; attribute that equals &lt;strong&gt;radio&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;radio&quot;&amp;gt;
&amp;lt;input type=&quot;radio&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step 2&lt;/h3&gt;
&lt;p&gt;Second we'll put in the id of the tag and the value it will produce&amp;lt;/strong&amp;gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; value=&quot;YES&quot;&amp;gt;
&amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; value=&quot;NO&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step 3&lt;/h3&gt;
&lt;p&gt;Now let's add the name attribute so we can associate these buttons to one another.&lt;br /&gt;
That way if the user selects one button, it will deselect the other.&lt;br /&gt;Every input needs
this anyway, so don't mess it up. &lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; value=&quot;YES&quot; name=&quot;BaconFan&quot;&amp;gt;
&amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; value=&quot;NO&quot; name=&quot;BaconFan&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step 4&lt;/h3&gt;
&lt;p&gt;Now let's add in some labels for user to understand what the radio buttons represent.&lt;br /&gt;
The &lt;strong&gt;for&lt;/strong&gt; attribute helps the label to associate itself to the radio button.&lt;br /&gt;
That way if the user clicks on the label, it will also select that radio button.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; value=&quot;YES&quot; name=&quot;BaconFan&quot;&amp;gt;
&amp;lt;label for=&quot;yes&quot;&amp;gt;Yes&amp;lt;/label&amp;gt;

&amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; value=&quot;NO&quot; name=&quot;BaconFan&quot;&amp;gt;
&amp;lt;label for=&quot;no&quot;&amp;gt;No&amp;lt;/label&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;Making Checkboxes&lt;/h2&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;400&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;tjrankin572&quot; data-slug-hash=&quot;bGBzKRW&quot; style=&quot;height: 600px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;RankinBacon.blog-Checkboxes&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/tjrankin572/pen/bGBzKRW&quot;&gt;
  RankinBacon.blog-Checkboxes&lt;/a&gt; by tjrankin572 (&lt;a href=&quot;https://codepen.io/tjrankin572&quot;&gt;@tjrankin572&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Step One&lt;/h3&gt;

&lt;p&gt;Set the type of the input to checkbox and the approriate id&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step Two&lt;/h3&gt;

&lt;p&gt;Now add the name and value attributes for the checkboxes.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot; name=&quot;toppings&quot; value=&quot;PEPPERONI&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step Three&lt;/h3&gt;

&lt;p&gt;Great now let's add in our label so the user undestands what this checkbox does.&lt;br /&gt;Make sure to the &lt;strong&gt;for&lt;/strong&gt; attribute is associated with your checkbox id.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot; name=&quot;toppings&quot; value=&quot;PEPPERONI&quot;&amp;gt;
&amp;lt;label for=&quot;pepperoni-btn&quot;&amp;gt;Pepperoni&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step Four&lt;/h3&gt;

&lt;p&gt;Now just add in the rest of your checkboxes and you're good to go! Make sure they all still have the same name tag&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot; name=&quot;toppings&quot; value=&quot;PEPPERONI&quot;&amp;gt;
&amp;lt;label for=&quot;pepperoni-btn&quot;&amp;gt;Pepperoni&amp;lt;/label&amp;gt;

&amp;lt;input type=&quot;checkbox&quot; id=&quot;extra-cheese-btn&quot; name=&quot;toppings&quot; value=&quot;EXTRA_CHEESE&quot;&amp;gt;
&amp;lt;label for=&quot;extra-cheese-btn&quot;&amp;gt;Extra Cheese&amp;lt;/label&amp;gt;

&amp;lt;input type=&quot;checkbox&quot; id=&quot;mushroom-btn&quot; name=&quot;toppings&quot; value=&quot;MUSHROOM&quot;&amp;gt;
&amp;lt;label for=&quot;mushroom-btn&quot;&amp;gt;Mushroom&amp;lt;/label&amp;gt;

&amp;lt;input type=&quot;checkbox&quot; id=&quot;pineapple-btn&quot; name=&quot;toppings&quot; value=&quot;PINEAPPLE&quot;&amp;gt;
&amp;lt;label for=&quot;pineapple-btn&quot;&amp;gt;Pineapple&amp;lt;/label&amp;gt;

&amp;lt;input type=&quot;checkbox&quot; id=&quot;bacon-btn&quot; name=&quot;toppings&quot; value=&quot;BACON&quot;&amp;gt;
&amp;lt;label for=&quot;bacon-btn&quot;&amp;gt;Bacon&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;Making Dropdowns&lt;/h2&gt;

&lt;p class=&quot;codepen&quot; data-height=&quot;400&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;tjrankin572&quot; data-slug-hash=&quot;eYBxKKQ&quot; style=&quot;height: 600px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;RankinBacon.blog-Dropdowns&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/tjrankin572/pen/eYBxKKQ&quot;&gt;
  RankinBacon.blog-Dropdowns&lt;/a&gt; by tjrankin572 (&lt;a href=&quot;https://codepen.io/tjrankin572&quot;&gt;@tjrankin572&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;h3&gt;Step One&lt;/h3&gt;

&lt;p&gt;In order to setup a dropdown, let's first add in our select tag. We'll also add in our label tag, get our id and name attributes all setup as well.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;label for=&quot;hogwarts-house&quot;&amp;gt;Select a House&amp;lt;/label&amp;gt;

&amp;lt;select id=&quot;hogwarts-house&quot; name=&quot;hogwarts-house&quot;&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step Two&lt;/h3&gt;

&lt;p&gt;Right now, our dropdown is empty! Let's fix that by adding in some options inside our select tag. Make sure to add in the value for each of our options.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;label for=&quot;hogwarts-house&quot;&amp;gt;Select a House&amp;lt;/label&amp;gt;

&amp;lt;select id=&quot;hogwarts-house&quot; name=&quot;hogwarts-house&quot;&amp;gt;
  &amp;lt;option value=&quot;gryffindor&quot;&amp;gt;Gryffindor&amp;lt;/option&amp;gt; 
  &amp;lt;option value=&quot;slytherin&quot;&amp;gt;Slytherin&amp;lt;/option&amp;gt; 
  &amp;lt;option value=&quot;ravenclaw&quot;&amp;gt;Ravenclaw&amp;lt;/option&amp;gt; 
  &amp;lt;option value=&quot;hufflepuff&quot;&amp;gt;Hufflepuff&amp;lt;/option&amp;gt; 
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3&gt;Step Three&lt;/h3&gt;

&lt;p&gt;Great! Now we can select our house! But there's only one problem. It selects Gryffindor by default! While that is my house, I don't want the user to accidently pick that if they're in Ravenclaw.&lt;br /&gt; So let's add in a placeholder option that will show up initially but can't be selected once the user interacts with the dropdown.&lt;br /&gt; For our new option tag, add the &lt;strong&gt;selected&lt;/strong&gt; attribute that will make it our default option. Then add &lt;strong&gt;disabled&lt;/strong&gt; and &lt;strong&gt;hidden&lt;/strong&gt; to prevent the user from accidently selecting the placeholder option. &lt;br /&gt; Feel free to play around with this by removing this attributes and interacting with the dropdown to see what happens!&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;label for=&quot;hogwarts-house&quot;&amp;gt;Select a House&amp;lt;/label&amp;gt;

&amp;lt;select id=&quot;hogwarts-house&quot; name=&quot;hogwarts-house&quot;&amp;gt;

  &amp;lt;option value=&quot;none&quot; selected disabled hidden&amp;gt;Select an option&amp;lt;/option&amp;gt;

  &amp;lt;option value=&quot;gryffindor&quot;&amp;gt;Gryffindor&amp;lt;/option&amp;gt; 
  &amp;lt;option value=&quot;slytherin&quot;&amp;gt;Slytherin&amp;lt;/option&amp;gt; 
  &amp;lt;option value=&quot;ravenclaw&quot;&amp;gt;Ravenclaw&amp;lt;/option&amp;gt; 
  &amp;lt;option value=&quot;hufflepuff&quot;&amp;gt;Hufflepuff&amp;lt;/option&amp;gt; 
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;That is it! Congratulations on making this far! Thanks for joining me on the first part of this multi-part survey form project. Once the next part is up I'll update this post in order to link you directly to that post.&lt;/p&gt;</content><author><name>Tyler Rankin</name></author><category term="Coding" /><summary type="html">What is up World? I guess that I’m full speed ahead on this whole blog thing. One of the things I would love to write about on a consistent basis would be coding tutorials! I’ve been very lucky to have taught myself enough code in order to land a career in the tech industry. So it’d be nice to share what I’ve learned along the way. Therefore, why not cover the absolute basics that I’m positive any developer whose visiting this blog has probably seen before! Today we’re going to discuss how to use radio buttons! \ Fine if you’re so stuck-up about it, how about we cover three inputs? Oh, and how about we wrap all these inputs together into a survey project? Would that quench your thrist? via GIPHY Sweet, now that we got that out of the way let’s get rolling! Here are the inputs we are going to cover: Radio Inputs Checkboxes Dropdown The Form Tag Whenever, you're working with inputs, it's a good idea to wrap all of your inputs inside of a form tag. That way our user can start submitting data when they're done with our forms. Since I'm planning to make this a multi-part project series, feel free to fork this codepen below! See the Pen RankinBacon.blog-SurveyTemplate by tjrankin572 (@tjrankin572) on CodePen. Without further ado, let's get started. Making Radio Button See the Pen RankinBacon.blog-RadioInput by tjrankin572 (@tjrankin572) on CodePen. Let’s break down these attributes step by step. Step 1 First we'll add in our input tag with a type attribute that equals radio &amp;lt;input type=&quot;radio&quot;&amp;gt; &amp;lt;input type=&quot;radio&quot;&amp;gt; Step 2 Second we'll put in the id of the tag and the value it will produce&amp;lt;/strong&amp;gt; &amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; value=&quot;YES&quot;&amp;gt; &amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; value=&quot;NO&quot;&amp;gt; Step 3 Now let's add the name attribute so we can associate these buttons to one another. That way if the user selects one button, it will deselect the other.Every input needs this anyway, so don't mess it up. &amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; value=&quot;YES&quot; name=&quot;BaconFan&quot;&amp;gt; &amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; value=&quot;NO&quot; name=&quot;BaconFan&quot;&amp;gt; Step 4 Now let's add in some labels for user to understand what the radio buttons represent. The for attribute helps the label to associate itself to the radio button. That way if the user clicks on the label, it will also select that radio button. &amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; value=&quot;YES&quot; name=&quot;BaconFan&quot;&amp;gt; &amp;lt;label for=&quot;yes&quot;&amp;gt;Yes&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; value=&quot;NO&quot; name=&quot;BaconFan&quot;&amp;gt; &amp;lt;label for=&quot;no&quot;&amp;gt;No&amp;lt;/label&amp;gt; Making Checkboxes See the Pen RankinBacon.blog-Checkboxes by tjrankin572 (@tjrankin572) on CodePen. Step One Set the type of the input to checkbox and the approriate id &amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot;&amp;gt; Step Two Now add the name and value attributes for the checkboxes. &amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot; name=&quot;toppings&quot; value=&quot;PEPPERONI&quot;&amp;gt; Step Three Great now let's add in our label so the user undestands what this checkbox does.Make sure to the for attribute is associated with your checkbox id. &amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot; name=&quot;toppings&quot; value=&quot;PEPPERONI&quot;&amp;gt; &amp;lt;label for=&quot;pepperoni-btn&quot;&amp;gt;Pepperoni&amp;lt;/label&amp;gt; Step Four Now just add in the rest of your checkboxes and you're good to go! Make sure they all still have the same name tag &amp;lt;input type=&quot;checkbox&quot; id=&quot;pepperoni-btn&quot; name=&quot;toppings&quot; value=&quot;PEPPERONI&quot;&amp;gt; &amp;lt;label for=&quot;pepperoni-btn&quot;&amp;gt;Pepperoni&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;checkbox&quot; id=&quot;extra-cheese-btn&quot; name=&quot;toppings&quot; value=&quot;EXTRA_CHEESE&quot;&amp;gt; &amp;lt;label for=&quot;extra-cheese-btn&quot;&amp;gt;Extra Cheese&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;checkbox&quot; id=&quot;mushroom-btn&quot; name=&quot;toppings&quot; value=&quot;MUSHROOM&quot;&amp;gt; &amp;lt;label for=&quot;mushroom-btn&quot;&amp;gt;Mushroom&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;checkbox&quot; id=&quot;pineapple-btn&quot; name=&quot;toppings&quot; value=&quot;PINEAPPLE&quot;&amp;gt; &amp;lt;label for=&quot;pineapple-btn&quot;&amp;gt;Pineapple&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;checkbox&quot; id=&quot;bacon-btn&quot; name=&quot;toppings&quot; value=&quot;BACON&quot;&amp;gt; &amp;lt;label for=&quot;bacon-btn&quot;&amp;gt;Bacon&amp;lt;/label&amp;gt; Making Dropdowns See the Pen RankinBacon.blog-Dropdowns by tjrankin572 (@tjrankin572) on CodePen. Step One In order to setup a dropdown, let's first add in our select tag. We'll also add in our label tag, get our id and name attributes all setup as well. &amp;lt;label for=&quot;hogwarts-house&quot;&amp;gt;Select a House&amp;lt;/label&amp;gt; &amp;lt;select id=&quot;hogwarts-house&quot; name=&quot;hogwarts-house&quot;&amp;gt; &amp;lt;/select&amp;gt; Step Two Right now, our dropdown is empty! Let's fix that by adding in some options inside our select tag. Make sure to add in the value for each of our options. &amp;lt;label for=&quot;hogwarts-house&quot;&amp;gt;Select a House&amp;lt;/label&amp;gt; &amp;lt;select id=&quot;hogwarts-house&quot; name=&quot;hogwarts-house&quot;&amp;gt; &amp;lt;option value=&quot;gryffindor&quot;&amp;gt;Gryffindor&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;slytherin&quot;&amp;gt;Slytherin&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;ravenclaw&quot;&amp;gt;Ravenclaw&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;hufflepuff&quot;&amp;gt;Hufflepuff&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; Step Three Great! Now we can select our house! But there's only one problem. It selects Gryffindor by default! While that is my house, I don't want the user to accidently pick that if they're in Ravenclaw. So let's add in a placeholder option that will show up initially but can't be selected once the user interacts with the dropdown. For our new option tag, add the selected attribute that will make it our default option. Then add disabled and hidden to prevent the user from accidently selecting the placeholder option. Feel free to play around with this by removing this attributes and interacting with the dropdown to see what happens! &amp;lt;label for=&quot;hogwarts-house&quot;&amp;gt;Select a House&amp;lt;/label&amp;gt; &amp;lt;select id=&quot;hogwarts-house&quot; name=&quot;hogwarts-house&quot;&amp;gt; &amp;lt;option value=&quot;none&quot; selected disabled hidden&amp;gt;Select an option&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;gryffindor&quot;&amp;gt;Gryffindor&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;slytherin&quot;&amp;gt;Slytherin&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;ravenclaw&quot;&amp;gt;Ravenclaw&amp;lt;/option&amp;gt; &amp;lt;option value=&quot;hufflepuff&quot;&amp;gt;Hufflepuff&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; Conclusion That is it! Congratulations on making this far! Thanks for joining me on the first part of this multi-part survey form project. Once the next part is up I'll update this post in order to link you directly to that post.</summary></entry><entry><title type="html">Luigi’s Mansion 3</title><link href="https://tjrankin572.github.io/coding/2021/03/02/Luigi's-Mansion-3.html" rel="alternate" type="text/html" title="Luigi’s Mansion 3" /><published>2021-03-02T12:00:00-07:00</published><updated>2021-03-02T12:00:00-07:00</updated><id>https://tjrankin572.github.io/coding/2021/03/02/Luigi's-Mansion-3</id><content type="html" xml:base="https://tjrankin572.github.io/coding/2021/03/02/Luigi's-Mansion-3.html">&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;I guess that I’m full speed ahead on this whole blog thing.
 One of the things I would love to write about on a consistent basis would be coding tutorials! I’ve been very lucky to have taught myself enough code in order to land a career in the tech industry. So it’d be nice to share what I’ve learned along the way.&lt;/p&gt;

&lt;p&gt;Therefore, why not cover the absolute basics that I’m positive any developer whose visiting this blog has probably seen before!&lt;/p&gt;

&lt;p&gt;Today we’re going to discuss how to use radio buttons!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/W0SLa0YuzWBZ6/giphy.gif&quot; alt=&quot;Software Developers Have a Disgusted Reaction&quot; /&gt;
 \&lt;/p&gt;

&lt;p&gt;I don’t care if you can google it and find it on MDN. 
We’re doing it anyway dang it!&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;making-a-radio-button&quot;&gt;Making a Radio Button&lt;/h1&gt;

&lt;p&gt;The code for this very humble input is as follows.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; name=&quot;cheese&quot; value=&quot;yes&quot;&amp;gt; 
&amp;lt;label for=&quot;yes&quot;&amp;gt;Yes&amp;lt;/label&amp;gt;  
&amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; name=&quot;cheese&quot; value=&quot;no&quot;&amp;gt; 
&amp;lt;label for=&quot;no&quot;&amp;gt;No&amp;lt;/label&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It produces the following result!
&lt;br /&gt;&lt;/p&gt;
&lt;div&gt;
    &lt;input type=&quot;radio&quot; id=&quot;yes&quot; name=&quot;cheese&quot; value=&quot;yes&quot; /&gt; 
    &lt;label for=&quot;yes&quot;&gt;Yes&lt;/label&gt;  
    &lt;input type=&quot;radio&quot; id=&quot;no&quot; name=&quot;cheese&quot; value=&quot;no&quot; /&gt; 
    &lt;label for=&quot;no&quot;&gt;No&lt;/label&gt;
&lt;/div&gt;</content><author><name>Tyler Rankin</name></author><category term="Coding" /><summary type="html">Hello World! I guess that I’m full speed ahead on this whole blog thing. One of the things I would love to write about on a consistent basis would be coding tutorials! I’ve been very lucky to have taught myself enough code in order to land a career in the tech industry. So it’d be nice to share what I’ve learned along the way. Therefore, why not cover the absolute basics that I’m positive any developer whose visiting this blog has probably seen before! Today we’re going to discuss how to use radio buttons! \ I don’t care if you can google it and find it on MDN. We’re doing it anyway dang it! Making a Radio Button The code for this very humble input is as follows. &amp;lt;input type=&quot;radio&quot; id=&quot;yes&quot; name=&quot;cheese&quot; value=&quot;yes&quot;&amp;gt; &amp;lt;label for=&quot;yes&quot;&amp;gt;Yes&amp;lt;/label&amp;gt; &amp;lt;input type=&quot;radio&quot; id=&quot;no&quot; name=&quot;cheese&quot; value=&quot;no&quot;&amp;gt; &amp;lt;label for=&quot;no&quot;&amp;gt;No&amp;lt;/label&amp;gt; It produces the following result! Yes No</summary></entry><entry><title type="html">Donkey Kong Country: Tropic Freeze (A Video Game Rant)</title><link href="https://tjrankin572.github.io/video/game/rant/2021/02/21/Donkey-Kong.html" rel="alternate" type="text/html" title="Donkey Kong Country: Tropic Freeze (A Video Game Rant)" /><published>2021-02-21T12:00:00-07:00</published><updated>2021-02-21T12:00:00-07:00</updated><id>https://tjrankin572.github.io/video/game/rant/2021/02/21/Donkey-Kong</id><content type="html" xml:base="https://tjrankin572.github.io/video/game/rant/2021/02/21/Donkey-Kong.html">&lt;p&gt;I had a fantastic time playing Donkey Kong Country Returns on Wii way back in the day. The tight and difficult
2D platforming grinded hours out of my life back in the day. Despite how much I enjoyed the old entry, though, the sequel flew right past me. I’m not the only one to experience this. Many people share the sentiment that this game kinda went under the radar as it was released late in the Wii U’s lifecycle.&lt;/p&gt;

&lt;p&gt;If you missed Donkey Kong Country: Tropic Freeze during the Wii U, do check this game out because there is so much to enjoy and admire in this barrel of a good time.&lt;/p&gt;

&lt;h2 id=&quot;gameplay&quot;&gt;Gameplay&lt;/h2&gt;

&lt;p&gt;As a fan of 2D platformers this game was a breath of fresh air. One of the biggest highlights being the fantastic level design. Almost every level offered something new and unique to experience. Even after completing the game I have a deep desire to go back and unlock some of the secret levels. This is because I trust that when Tropical Freeze gives me a level, it’s not going to waste my time with a generic point A to B level. There will always be something novel to engage with, whether that is a new mechanic, a combination of mechanics you’re already familiar with, a clever spin on an old one, etc.&lt;/p&gt;

&lt;p&gt;Furthermore, this game does include the water levels that many people complained wasn’t in the last entry. Personally, I’ve never been the biggest of water levels in video games. Even in Rayman Origins or Rayman Legends those types of levels felt very basic for me. Although, the ones offered in Tropic Freeze got my respect because again the level design variety shined through to make these typically mundane levels feel fresh. Call me crazy, but I think having to manage the amount of air I had gave a nice sense of tension increased my enjoyment of these water levels. Otherwise in other modern, 2d platformers I could lazily drift my way to the end of the level.&lt;/p&gt;

&lt;p&gt;The game should be however, should’ve been called Donkey Kong Country: Dixie Takes Over. Because really out of the three characters, Dixie’s abilities overpowered the other two. Dixie’s hair spin move allows Donkey Kong to achieve what almost feels like a real double jump by raising his elevation. Diddy Kong only allows you to sustain Donkey Kong’s current jump height, just allowing you to cross that gap. But you know, it’s Diddy Kong. So he gets second place.&lt;/p&gt;

&lt;p&gt;Cranky Kong, he sucks. The concept of Cranky sounds really cool, let the player use his beard to bounce off of spikes. Which sounds nice
until you realize that a majority of the game doesn’t make use of spikes. Instead, what you have are a bunch of bottomless pits. When I’m faced with similar obstacles Diddy and Dixie are there to help me out. But whenever I switched over to Cranky Kong my brain couldn’t make the switch over to the way Cranky Kong plays. Granted though, I could do definitely see gamers making a Nuzlock like challenge by exclusively playing as this character. Because that would be a challenge.&lt;/p&gt;

&lt;h3 id=&quot;bosses&quot;&gt;Bosses&lt;/h3&gt;
&lt;p&gt;In other news the boss fights are so much better than its predecessor. Back in Donkey Kong Country Returns, many of those fights felt extremely basic, too easy and left much to be desired. It only really picked up towards the end with a boss ripped off from Star Fox’s Andross.&lt;/p&gt;

&lt;p&gt;This is yet another area where Tropic Freeze outshine its predecessor. Each boss fight is a memorable one! I’m not gonna spoil it, but this was helped by the variety in boss characters. Each one felt like they had their own personality, and you could see those traits playing off in the fight.&lt;/p&gt;

&lt;p&gt;Not only was the creativity refreshing to see in a Nintendo boss fight, but also the satisfying level of challenge they offer as well. Back in Donkey Kong Country Returns, it took a total of 3 easy hits to defeat the boss. In Tropic Freeze, it takes 9 hits in order to beat the boss. And the boss will switch up its patterns on the third and sixth hit. This sells what a boss should be, an awesome set-piece moment to prove your mastery over the game. If Nintendo wants to start using this formula instead for their bosses, I would be down for it.&lt;/p&gt;

&lt;h2 id=&quot;theme-graphicsaestheticssound&quot;&gt;Theme (Graphics/Aesthetics/Sound)&lt;/h2&gt;

&lt;p&gt;I’ll be honest, seeing Donkey Kong jump into a level, slamming the floor, banging his chest, shouting out “A WOO WHOOO” never got old for me. The sounds gives an already positive filled game a slapstick flavor. It even helps out Cranky Kong be less sucky in my opinion by giving his beard bouncing up a pogo stick like sound.&lt;/p&gt;

&lt;p&gt;The rhythmic music had my head bobbing to the beat, jiving to groove or on the edge of my seat during a tense jump sequence.&lt;/p&gt;

&lt;p&gt;Lastly, each world offers such a nice aesthetic such as the fruity jungle, winter wasteland, or the forest filled with wind instruments. They were a joy to explore because I could sense the passion the design team put into them.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h2&gt;

&lt;p&gt;Overall, Tropic Freeze just made me feel happy. Donkey Kong Country Returns, is kinda like that old friend you’ve thought about touching base with. Then when you finally get the nerve to call them up you realize just how much they’ve grown, and how much fun they are to be with. (Tropic Freeze)&lt;/p&gt;

&lt;p&gt;So do yourself a favor, stop reading this blog and go treat yourself to this appealing entry in the Donkey Kong series.&lt;/p&gt;</content><author><name>Tyler Rankin</name></author><category term="Video" /><category term="Game" /><category term="Rant" /><summary type="html">I had a fantastic time playing Donkey Kong Country Returns on Wii way back in the day. The tight and difficult 2D platforming grinded hours out of my life back in the day. Despite how much I enjoyed the old entry, though, the sequel flew right past me. I’m not the only one to experience this. Many people share the sentiment that this game kinda went under the radar as it was released late in the Wii U’s lifecycle. If you missed Donkey Kong Country: Tropic Freeze during the Wii U, do check this game out because there is so much to enjoy and admire in this barrel of a good time. Gameplay As a fan of 2D platformers this game was a breath of fresh air. One of the biggest highlights being the fantastic level design. Almost every level offered something new and unique to experience. Even after completing the game I have a deep desire to go back and unlock some of the secret levels. This is because I trust that when Tropical Freeze gives me a level, it’s not going to waste my time with a generic point A to B level. There will always be something novel to engage with, whether that is a new mechanic, a combination of mechanics you’re already familiar with, a clever spin on an old one, etc. Furthermore, this game does include the water levels that many people complained wasn’t in the last entry. Personally, I’ve never been the biggest of water levels in video games. Even in Rayman Origins or Rayman Legends those types of levels felt very basic for me. Although, the ones offered in Tropic Freeze got my respect because again the level design variety shined through to make these typically mundane levels feel fresh. Call me crazy, but I think having to manage the amount of air I had gave a nice sense of tension increased my enjoyment of these water levels. Otherwise in other modern, 2d platformers I could lazily drift my way to the end of the level. The game should be however, should’ve been called Donkey Kong Country: Dixie Takes Over. Because really out of the three characters, Dixie’s abilities overpowered the other two. Dixie’s hair spin move allows Donkey Kong to achieve what almost feels like a real double jump by raising his elevation. Diddy Kong only allows you to sustain Donkey Kong’s current jump height, just allowing you to cross that gap. But you know, it’s Diddy Kong. So he gets second place. Cranky Kong, he sucks. The concept of Cranky sounds really cool, let the player use his beard to bounce off of spikes. Which sounds nice until you realize that a majority of the game doesn’t make use of spikes. Instead, what you have are a bunch of bottomless pits. When I’m faced with similar obstacles Diddy and Dixie are there to help me out. But whenever I switched over to Cranky Kong my brain couldn’t make the switch over to the way Cranky Kong plays. Granted though, I could do definitely see gamers making a Nuzlock like challenge by exclusively playing as this character. Because that would be a challenge. Bosses In other news the boss fights are so much better than its predecessor. Back in Donkey Kong Country Returns, many of those fights felt extremely basic, too easy and left much to be desired. It only really picked up towards the end with a boss ripped off from Star Fox’s Andross. This is yet another area where Tropic Freeze outshine its predecessor. Each boss fight is a memorable one! I’m not gonna spoil it, but this was helped by the variety in boss characters. Each one felt like they had their own personality, and you could see those traits playing off in the fight. Not only was the creativity refreshing to see in a Nintendo boss fight, but also the satisfying level of challenge they offer as well. Back in Donkey Kong Country Returns, it took a total of 3 easy hits to defeat the boss. In Tropic Freeze, it takes 9 hits in order to beat the boss. And the boss will switch up its patterns on the third and sixth hit. This sells what a boss should be, an awesome set-piece moment to prove your mastery over the game. If Nintendo wants to start using this formula instead for their bosses, I would be down for it. Theme (Graphics/Aesthetics/Sound) I’ll be honest, seeing Donkey Kong jump into a level, slamming the floor, banging his chest, shouting out “A WOO WHOOO” never got old for me. The sounds gives an already positive filled game a slapstick flavor. It even helps out Cranky Kong be less sucky in my opinion by giving his beard bouncing up a pogo stick like sound. The rhythmic music had my head bobbing to the beat, jiving to groove or on the edge of my seat during a tense jump sequence. Lastly, each world offers such a nice aesthetic such as the fruity jungle, winter wasteland, or the forest filled with wind instruments. They were a joy to explore because I could sense the passion the design team put into them. Final Thoughts Overall, Tropic Freeze just made me feel happy. Donkey Kong Country Returns, is kinda like that old friend you’ve thought about touching base with. Then when you finally get the nerve to call them up you realize just how much they’ve grown, and how much fun they are to be with. (Tropic Freeze) So do yourself a favor, stop reading this blog and go treat yourself to this appealing entry in the Donkey Kong series.</summary></entry></feed>